unbind-key C-b
set -g automatic-rename off
set -g prefix `
set -g mouse off
set -ga terminal-overrides ",$TERM:RGB:smcup@:rmcup@"
set-option -g default-terminal "tmux-256color"
#set-option -ga status-style fg=#cfcfcf,bg=#1f2335
set-option -ga status-style fg=#cfcfcf,bg=default
set-option -ga message-style fg=white,bg=default
set-option -g renumber-windows on
set-option focus-events on
set-option -g detach-on-destroy off
set -g pane-border-style fg=#404080
set -g pane-active-border-style fg=#806aba
set -g popup-border-style 'fg=#806aba'
set -g popup-border-lines 'rounded'
set -g status on
set -g base-index 1
setw -g pane-base-index 1
set -s escape-time 0
set -g status-left-length 20
set -g status on
set -g status-right-length 80
set -g status-right "#[fg=#95909a]#(cat $HOME/.tmux.message) #[fg=#8a60ba]| #[fg=#75707a]%H:%M %d-%m-%Y"
set -g mode-style fg=color15,bg=color55
set -g history-limit 10000
set -g window-status-format ""
set -g window-status-current-format ""
set -g status-left-length 0
unbind-key \"

set-option -g @horizontal-split-margin 67%
set -g focus-events on
set-option -g @suppress_focus 0
set-hook -g pane-focus-in[0] {
  if -F '#{!=:#{@suppress_focus},1}' { run "stmux recent-session add" } {}
  run "stmux status"
}

set-hook -g session-renamed[0] { run "stmux status" }
set-hook -g window-renamed[0] {
  run "tmux set -p -t #{window_id}.1 @window-name '#{window_name}'"
  run "stmux status"
}

set-hook -g window-linked[0] {
  run "tmux set -p -t #{window_id}.1 @window-name '#{window_name}'"
}

set-hook -g window-pane-changed[0] {
  run "stmux status"
}

set-hook -g pane-exited[0] {
  if -F '#{==:#{window_panes},1}' {
    if '#{?@window-name}' {
      if '#{!=:#W,#{@window-name}' {
        rename-window '#{@window-name}'
      }
    }
  }
}

bind ` send-prefix
bind-key T set-option status
bind-key h if -F '#{>:#{session_windows},1}' 'previous-window; run "stmux status"' ''
bind-key l if -F '#{>:#{session_windows},1}' 'next-window; run "stmux status"' ''
bind-key H swap-window -t -1\; select-window -t -1\; run "stmux status"
bind-key L swap-window -t +1\; select-window -t +1\; run "stmux status"
bind-key j select-pane -t -1
bind-key k select-pane -t +1
bind-key J swap-pane -U\; run "stmux status"
bind-key K swap-pane -D\; run "stmux status"
bind-key 0 new-session
bind-key R source ~/.tmux.conf\; display-message "#[fg=#8a60ab,align=centre]config #[fg=#e0e0e0]reloaded"
bind-key S choose-session
bind-key "'" split-window -h -e NO_CD=1 -c "#{pane_current_path}"
bind-key \" split-window -v -e NO_CD=1 -c "#{pane_current_path}"
bind-key M select-pane -m
bind-key s new-window -e NO_CD=1 -c "#{pane_current_path}"

bind-key "_" run-shell "$SCRIPTS_DIR/alacritty_opacity +"
bind-key "+" run-shell "$SCRIPTS_DIR/alacritty_opacity -"

unbind-key Q
unbind-key C
unbind-key Tab
unbind-key m
unbind-key c

# bind-key H resize-pane -L 10
# bind-key L resize-pane -R 10
bind-key J resize-pane -D 3
bind-key K resize-pane -U 3
bind-key C-h resize-pane -L 10
bind-key C-l resize-pane -R 10
bind-key C-j resize-pane -D 3
bind-key C-k resize-pane -U 3

bind-key 1 run "stmux bookmark select 1 --smart-focus 1"\; run "stmux status"
bind-key 2 run "stmux bookmark select 2"\; run "stmux status"
bind-key 3 run "stmux bookmark select 3"\; run "stmux status"
bind-key 4 run "stmux bookmark select 4"\; run "stmux status"
bind-key 5 run "stmux bookmark select 5"\; run "stmux status"
bind-key 6 run "stmux bookmark select 6"\; run "stmux status"
bind-key 7 run "stmux bookmark select 7"\; run "stmux status"
bind-key 8 run "stmux bookmark select 8"\; run "stmux status"
bind-key 9 run "stmux bookmark select 9"\; run "stmux status"
bind-key a run "stmux bookmark set"
bind-key f run "stmux bookmark edit"
bind-key p run "stmux session find-all"
bind-key P run "stmux session find"
bind-key M-p run "stmux session find-all --split"
bind-key o set-option -g @suppress_focus 1 \; run "stmux recent-session next" \; set-option -g @suppress_focus 0
bind-key i set-option -g @suppress_focus 1 \; run "stmux recent-session previous" \; set-option -g @suppress_focus 0
bind-key r run "stmux recent-session edit"

bind-key v run "stmux session select nvim-config"
bind-key t run "stmux session select tmux"
bind-key z run "stmux session select zshrc"
bind-key n run "stmux session select notes"
bind-key u copy-mode

bind-key M-1 select-window -t 1
bind-key M-2 select-window -t 2
bind-key M-3 select-window -t 3
bind-key M-4 select-window -t 4
bind-key M-5 select-window -t 5

set-option -g command-alias[0] "bp=break-pane"
set-option -g command-alias[1] "jp=join-pane -h -t"
set-option -g command-alias[2] "jpl=join-pane -b -h -t"
set-option -g command-alias[3] "jpv=join-pane -v -t"
set-option -g command-alias[4] "jpvt=join-pane -b -v -t"

set -g @quickpane-q test
set -g @quickpane-w shell
set -g @quickpane-e claude

set -g @code-with-shell-layout "c764,158x39,0,0[158x31,0,0,0,158x7,0,32,10]"
bind-key Space run "$SCRIPTS_DIR/tmux_smart_split.sh v 13"\; run "stmux status"
bind-key Enter run "$SCRIPTS_DIR/tmux_smart_split.sh h"\; run "stmux status"
bind-key C-_ run "$SCRIPTS_DIR/tmux_cycle_next_pane.sh h -- force"\; run "stmux status"
bind-key \; run "$SCRIPTS_DIR/tmux_smart_split.sh h 58"\; run "stmux status"
bind-key q run "$SCRIPTS_DIR/tmux_smart_split.sh h -- #{@quickpane-q}"\; run "stmux status"
bind-key Q run "$SCRIPTS_DIR/tmux_smart_split.sh h 58 #{@quickpane-q}"\; run "stmux status"
bind-key w run "$SCRIPTS_DIR/tmux_smart_split.sh h -- #{@quickpane-w}"\; run "stmux status"
bind-key W run "$SCRIPTS_DIR/tmux_smart_split.sh h 58 #{@quickpane-w}"\; run "stmux status"
bind-key e run "$SCRIPTS_DIR/tmux_smart_split.sh h \"#{@horizontal-split-margin}\" #{@quickpane-e}"\; run "stmux status"
bind-key E run "$SCRIPTS_DIR/tmux_smart_split.sh h -- #{@quickpane-e}"\; run "stmux status"
bind-key \\ run-shell "$SCRIPTS_DIR/tmux_next_layout.sh"
bind-key c run "$SCRIPTS_DIR/toggle_claude.sh h \"#{@horizontal-split-margin}\""\; run "stmux status"
bind-key C run "$SCRIPTS_DIR/toggle_claude.sh h \"#{@horizontal-split-margin}\" --resume"\; run "stmux status"

bind-key \[ run "$SCRIPTS_DIR/tmux_pane_resize.sh -"
bind-key \] run "$SCRIPTS_DIR/tmux_pane_resize.sh +"

set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# List of plugins
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "abhinav/tmux-fastcopy"
set-option -g set-clipboard on
set-option -g @fastcopy-action "tmux load-buffer -w -"
set-option -g @fastcopy-alphabet asdfghjkl
set-option -g @fastcopy-regex-http "http://.+"
set-option -g @fastcopy-regex-https "https://.+"
set-option -g @fastcopy-regex-aws "aws [^ ].*"
set-option -g @fastcopy-regex-aws2 "(aws [^\\s].*?)(\\s$|\\s{2,}|$)"
set-option -g @fastcopy-regex-file "file:///.+"
set-option -g @fastcopy-regex-git "git .+"
set-option -g @fastcopy-regex-git2 "git@.*\.git"
set-option -g @fastcopy-regex-shell "\\+ [^❯]+ ❯ (.+?) +[^ ]+ \\d{2}:\\d{2}"
set-option -g @fastcopy-regex-shell2 "\\+ [^❯]+ ❯ (.+?) +[^ ]+ \\d{2}:\\d{2}"
set-option -g @fastcopy-regex-shell3 "\\+ [^❯]+ ❯ (.+?) +\\d{2}:\\d{2}"
set-option -g @fastcopy-regex-shell4 "\\+ [^❯]+ ❯ (.+)"
set-option -g @fastcopy-regex-git-both-modified "both modified:   (.+)"
set-option -g @fastcopy-key F

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "~/.tmux/plugins/tpm/tpm"
